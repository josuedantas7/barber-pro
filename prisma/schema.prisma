// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?    @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  accounts       Account[]
  role           String?    @default("free")
  HairCuts       HairCuts[]
  idHairCuts     String?    @db.ObjectId
  Clients        Clients[]
}

model Clients {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  HairCuts   HairCuts @relation(fields: [idHairCuts], references: [id])
  idHairCuts String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  User       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
}

model HairCuts {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Float
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Clients   Clients[]
  User      User      @relation(fields: [userId], references: [id])
  userId    String    @db.ObjectId
  active    Boolean   @default(true)
}

model VerificationToken {
  identifier String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
